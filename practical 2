-- Drop and recreate the StudentEnrollments table
DROP TABLE IF EXISTS StudentEnrollments;

CREATE TABLE StudentEnrollments (
    enrollment_id INTEGER PRIMARY KEY,
    student_name VARCHAR(100) NOT NULL,
    course_id VARCHAR(10) NOT NULL,
    enrollment_date DATE NOT NULL,
    CONSTRAINT uc_student_course UNIQUE (student_name, course_id) -- prevents duplicate enrollment
);

-- Insert initial sample data
INSERT INTO StudentEnrollments VALUES (1, 'Ashish', 'CSE101', '2024-07-01');
INSERT INTO StudentEnrollments VALUES (2, 'Smaran', 'CSE102', '2024-07-01');
INSERT INTO StudentEnrollments VALUES (3, 'Vaibhav', 'CSE101', '2024-07-01');

-- Show starting state
SELECT 'Initial Data:' AS Result;
SELECT * FROM StudentEnrollments;

-- User 1 tries to enroll Ashish in CSE101 again (first attempt will succeed only if not already enrolled)
INSERT OR IGNORE INTO StudentEnrollments (enrollment_id, student_name, course_id, enrollment_date)
VALUES (4, 'Ashish', 'CSE101', '2024-07-02');

-- User 2 tries the same enrollment (ignored due to unique constraint)
INSERT OR IGNORE INTO StudentEnrollments (enrollment_id, student_name, course_id, enrollment_date)
VALUES (5, 'Ashish', 'CSE101', '2024-07-02');

-- Final Result
SELECT 'Final Data After Concurrency Control:' AS Result;
SELECT * FROM StudentEnrollments ORDER BY enrollment_id;
